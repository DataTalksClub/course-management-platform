# Generated by Django 4.2.9 on 2024-01-11 20:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "social_media_hashtag",
                    models.CharField(
                        blank=True,
                        help_text="The hashtag associated with the course for social media use.",
                        max_length=100,
                    ),
                ),
                (
                    "faq_document_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of the FAQ document for the course.",
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enrollment_date", models.DateTimeField(auto_now_add=True)),
                ("display_name", models.CharField(blank=True, max_length=255)),
                ("display_on_leaderboard", models.BooleanField(default=True)),
                (
                    "certificate_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("total_score", models.IntegerField(default=0)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "course")},
            },
        ),
        migrations.CreateModel(
            name="Homework",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("due_date", models.DateTimeField()),
                ("learning_in_public_cap", models.IntegerField(default=7)),
                (
                    "homework_url_field",
                    models.BooleanField(
                        default=True, help_text="Include field for homework URL"
                    ),
                ),
                (
                    "time_spent_lectures_field",
                    models.BooleanField(
                        default=True,
                        help_text="Include field for time spent on lectures",
                    ),
                ),
                (
                    "time_spent_homework_field",
                    models.BooleanField(
                        default=True,
                        help_text="Include field for time spent on homework",
                    ),
                ),
                (
                    "problems_comments_field",
                    models.BooleanField(
                        default=True,
                        help_text="Include field for problems and comments",
                    ),
                ),
                (
                    "faq_contribution_field",
                    models.BooleanField(
                        default=True, help_text="Include field for FAQ contributions"
                    ),
                ),
                ("is_scored", models.BooleanField(default=False)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
            ],
            options={
                "unique_together": {("course", "slug")},
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("submission_due_date", models.DateTimeField()),
                ("learning_in_public_cap_project", models.IntegerField(default=14)),
                ("peer_review_due_date", models.DateTimeField()),
                ("time_spent_project_field", models.BooleanField(default=True)),
                ("problems_comments_field", models.BooleanField(default=True)),
                (
                    "faq_contribution_field",
                    models.BooleanField(
                        default=True, help_text="Include field for FAQ contributions"
                    ),
                ),
                ("learning_in_public_cap_review", models.IntegerField(default=2)),
                ("number_of_peers_to_evaluate", models.IntegerField(default=3)),
                ("time_spent_evaluation_field", models.BooleanField(default=True)),
                ("points_to_pass", models.IntegerField(default=0)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("CS", "COLLECTING_SUBMISSIONS"),
                            ("PR", "PEER_REVIEWING"),
                            ("CO", "COMPLETED"),
                        ],
                        default="CS",
                        max_length=2,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
            ],
            options={
                "unique_together": {("course", "slug")},
            },
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "homework_link",
                    models.URLField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.URLValidator(
                                schemes=["http", "https", "git"]
                            )
                        ],
                    ),
                ),
                (
                    "learning_in_public_links",
                    models.JSONField(
                        blank=True,
                        help_text="Links where students talk about the course",
                        null=True,
                    ),
                ),
                (
                    "time_spent_lectures",
                    models.FloatField(
                        blank=True,
                        help_text="Time spent on lectures and reading (in hours)",
                        null=True,
                    ),
                ),
                (
                    "time_spent_homework",
                    models.FloatField(
                        blank=True,
                        help_text="Time spent on homework (in hours)",
                        null=True,
                    ),
                ),
                (
                    "problems_comments",
                    models.TextField(
                        blank=True, help_text="Any problems, comments, or feedback"
                    ),
                ),
                (
                    "faq_contribution",
                    models.TextField(blank=True, help_text="Contribution to FAQ"),
                ),
                ("submitted_at", models.DateTimeField(auto_now=True)),
                ("questions_score", models.IntegerField(default=0)),
                ("faq_score", models.IntegerField(default=0)),
                ("learning_in_public_score", models.IntegerField(default=0)),
                ("total_score", models.IntegerField(default=0)),
                (
                    "enrollment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.enrollment",
                    ),
                ),
                (
                    "homework",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.homework",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewCriteria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                ("options", models.JSONField()),
                ("max_score", models.IntegerField(default=4)),
                (
                    "review_criteria_type",
                    models.CharField(
                        choices=[("RB", "Radio Buttons"), ("CB", "Checkboxes")],
                        max_length=2,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("MC", "Multiple Choice"),
                            ("FF", "Free Form"),
                            ("CB", "Checkboxes"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "answer_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ANY", "Any"),
                            ("FLT", "Float"),
                            ("INT", "Integer"),
                            ("EXS", "Exact String"),
                            ("CTS", "Contains String"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("possible_answers", models.TextField(blank=True, null=True)),
                ("correct_answer", models.TextField(blank=True, null=True)),
                ("scores_for_correct_answer", models.IntegerField(default=1)),
                (
                    "homework",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.homework",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "github_link",
                    models.URLField(validators=[django.core.validators.URLValidator()]),
                ),
                ("commit_id", models.CharField(max_length=40)),
                ("learning_in_public_links", models.JSONField(blank=True, null=True)),
                ("faq_contribution", models.TextField(blank=True)),
                ("time_spent", models.FloatField()),
                ("problems_comments", models.TextField(blank=True)),
                ("submitted_at", models.DateTimeField(auto_now=True)),
                (
                    "enrollment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.enrollment",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.project",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PeerReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("note_to_peer", models.TextField()),
                ("learning_in_public_links", models.JSONField(blank=True, null=True)),
                ("time_spent_reviewing", models.FloatField()),
                ("comments", models.TextField(blank=True)),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submission_under_evaluation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.projectsubmission",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CriteriaResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                (
                    "criteria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.reviewcriteria",
                    ),
                ),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="criteria_responses",
                        to="courses.peerreview",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="students",
            field=models.ManyToManyField(
                related_name="courses_enrolled",
                through="courses.Enrollment",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer_text", models.TextField(blank=True, null=True)),
                ("is_correct", models.BooleanField(default=False)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.question",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.submission",
                    ),
                ),
            ],
        ),
    ]
