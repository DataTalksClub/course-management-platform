# Generated by Django 4.2.9 on 2024-02-06 21:42

from django.db import migrations

import logging

from courses.models import Question, QuestionTypes

# Configure logging
logger = logging.getLogger("courses.migrations")


def replace_answers_with_indexes(possible_answers, correct_answers):
    possible_answers = [
        answer.strip().lower() for answer in possible_answers
    ]
    correct_answers = correct_answers.lower().strip()

    logger.debug(f"Possible answers: {possible_answers}")
    logger.debug(f"Correct answers: {correct_answers}")

    correct_indexes = []

    for answer in correct_answers.split(","):
        answer = answer.strip()
        try:
            zero_based_index = possible_answers.index(answer)
            index = zero_based_index + 1
            correct_indexes.append(str(index))
        except ValueError:
            logger.error(
                f"Answer '{answer}' not found in possible_answers for question ID {question.id}"
            )

    result = ",".join(correct_indexes)
    logger.debug(f"Corrected result: {result}")
    return result


def update_correct_answers_to_indexes(apps, schema_editor):
    for question in Question.objects.all():
        if question.question_type not in [
            QuestionTypes.MULTIPLE_CHOICE.value,
            QuestionTypes.CHECKBOXES.value,
        ]:
            continue

        if question.possible_answers and question.correct_answer:
            possible_answers = question.get_possible_answers()

            correct_indexes = replace_answers_with_indexes(
                possible_answers, question.correct_answer
            )

            question.correct_answer = correct_indexes
            question.save()


class Migration(migrations.Migration):
    dependencies = [
        (
            "courses",
            "0003_replace_commas_with_linebreaks_in_possible_answers",
        ),
    ]

    operations = [
        migrations.RunPython(update_correct_answers_to_indexes),
    ]
